%% do not format this file
%% the strings need to be in the first column

{
"",
    [],
    {
        [],
        [],
        [],
        []
    }
}.

{
"%123
2.",
    [],
    {
        [],
        [],
        [],
        []
    }
}.

{
"%123
-define(X,X+X).",
    [
        {define,'X',-1,none,
            [{var,{1,11},"X",'X'},{var,{1,13},"X",'X'}],
            ["123"],
            {{1,9},{1,10}}}
    ],
    {
        [
            {[{macro,'X',-1}],{{1,9},{1,10}}},
            {[{macro,'X',-1},{var,'X'}],{{1,11},{1,12}}}
        ],
        [
            {[{macro,'X',-1},{var,'X'}],{{1,13},{1,14}}}
        ],
        [
            {[{macro,'X',-1}],[{comments,["123"]}]}
        ]
    }
}.

{
"%123
-define(Z(A,BB),A).",
    [
        {define,'Z',2,
                [[{var,{1,11},"A",'A'}],[{var,{1,13},"BB",'BB'}]],
                [{var,{1,17},"A",'A'}],
                ["123"],
                {{1,9},{1,10}}}
    ],
    {
        [
            {[{macro,'Z',2}],{{1,9},{1,10}}},
            {[{macro,'Z',2},{var,'A'}],{{1,11},{1,12}}},
            {[{macro,'Z',2},{var,'BB'}],{{1,13},{1,15}}}
        ],
        [
            {[{macro,'Z',2},{var,'A'}],{{1,17},{1,18}}}
        ],
        [
            {[{macro,'Z',2}],[{comments,["123"]}]}
        ],
        []
    }
}.

{
"%123
-include_lib(\"file\").",
    [
        {include_lib,"file",["123"],{{1,14},{1,20}}}
    ],
    {
        [],
        [{[{file, "file"}], {{1,14},{1,20}}}],
        [],
        []
    }
}.

{
"%123
-include(\"file\").",
    [
        {include,"file",["123"],{{1,10},{1,16}}}
    ],
    {
        [],
        [{[{file, "file"}], {{1,10},{1,16}}}],
        [],
        []
    }
}.

{
"%123
-compile(fob).",
    [
        {compile,{1,2},[{atom,{1,10},"fob",fob}],["123"]}
    ],
    {
        [],
        [],
        [],
        []
    }
}.

{
"%123
-module(x).",
    [{module,x,["123"],{{1,9},{1,10}}}],
    {
        [
            {[{module,x}],{{1,9},{1,10}}}
        ],
        [],
        [
            {[{module,x}],[{comments,["123"]}]}
        ],
        [{module,x}]
    }
}.

{
"%123
-import(mmm, [a/1,b/2]).",
    [
        {import,mmm,
                [{a,1,{{1,15},{1,18}}},{b,2,{{1,19},{1,22}}}],
                ["123"]}
    ],
    {
        [],
        [
            {[{module,mmm},{function,a,1}], {{1,15},{1,18}}},
            {[{module,mmm},{function,b,2}], {{1,19},{1,22}}}
        ],
        [],
        []
    }
}.

{
"%123
-export_type([a/1,b/2]).",
    [
        {export_type,
                [{a,1,{{1,15},{1,18}}},{b,2,{{1,19},{1,22}}}],
                ["123"]}
    ],
    {
        [],
        [
            {[{type,a,1}],{{1,15},{1,18}}},
            {[{type,b,2}],{{1,19},{1,22}}}
        ],
        [],
        []
    }
}.

{
"%123
-export([a/1,b/2]).",
    [
        {export,
                [{a,1,{{1,10},{1,13}}},{b,2,{{1,14},{1,17}}}],
                ["123"]}
    ],
    {
        [],
        [
            {[{function,a,1}],{{1,10},{1,13}}},
            {[{function,b,2}],{{1,14},{1,17}}}
        ],
        [],
        []
    }
}.

{
"%123
-callback bar(X)->'ok'|[Y].",
    [
        {callback,bar,1,
            [{[[{var,{1,15},"X",'X'}]],
                [{var,{1,25},"Y",'Y'}]}],
            ["123"],
            {{1,11},{1,14}}}
    ],
    {
        [],
        [],
        [],
        []
    }
}.

{
"%123
-spec foo(X :: integer(), Y) -> string(); (Z)->'ok'.",
    [
        {spec,foo,2,
            [{[[{var,{1,11},"X",'X'},
                {call,{atom,{1,16},"integer",integer},[]}],
                [{var,{1,27},"Y",'Y'}]],
                [{call,{atom,{1,33},"string",string},[]}]},
                {[[{var,{1,44},"Z",'Z'}]],[]}],
            ["123"],
            {{1,7},{1,10}}}
    ],
    {
        [],
        [{[{function,foo,2}],{{1,7},{1,10}}}],
        []
    }
}.

{
"%123
-opaque foo():: integer().",
    [
        {type,foo,0,[],
                [{call,{atom,{1,17},"integer",integer},[]}],
                ["123"],
                {{1,9},{1,12}},
                {1,26}}
    ],
    {
        [
            {[{type,foo,0}],{{1,9},{1,12}}}
        ],
        [
            {[{type,integer,0}],{{1,17},{1,24}}}
        ],
        [],
        []
    }
}.

{
"%123
-type foo():: integer().",
    [
        {type,foo,0,[],
                [{call,{atom,{1,15},"integer",integer},[]}],
                ["123"],
                {{1,7},{1,10}},
                {1,24}}
    ],
    {
        [
            {[{type,foo,0}],{{1,7},{1,10}}}
        ],
        [
            {[{type,integer,0}],{{1,15},{1,22}}}
        ],
        [],
        []
    }
}.

{
"%123
-type(foo():: #arec{}).",
    [
        {type,foo,0,[],
                [{record,{atom,{1,16},"arec",arec},[]}],
                ["123"],
                {{1,7},{1,10}},
                {1,23}}
    ],
    {
        [
            {[{type,foo,0}],{{1,7},{1,10}}}
        ],
        [
            {[{type,integer,0}],{{1,15},{1,22}}}
        ],
        [],
        []
    }
}.

{
"%123
-record(r,{a::string(),b,c=0,d::[x:baz()]=3}).",
    [
        {record,r,
            ["123"],
            {{1,9},{1,10}},
            [{field,{{1,12},{1,13}},
                    a,
                    [{call,{atom,{1,15},"string",string},[]}],
                    []},
            {field,{{1,24},{1,25}},b,[],[]},
            {field,{{1,26},{1,27}},c,[],[]},
            {field,{{1,30},{1,31}},
                    d,
                    [{call,{atom,{1,34},"x",x},{atom,{1,36},"baz",baz},[]}],
                    []}]}
    ],
    {
        [
            {[{record,r},{field,a}],{{1,12},{1,13}}},
            {[{record,r},{field,b}],{{1,12},{1,13}}},
            {[{record,r},{field,c}],{{1,12},{1,13}}},
            {[{record,r},{field,d}],{{1,12},{1,13}}},
            {[{record,r}],{{1,9},{1,10}}}
        ],
        [
            {[{type,string,0}],{{1,15},{1,21}}},
            {[{type,baz,0}],{{1,25},{1,28}}}
        ],
        [],
        []
    }
}.

{
"%123
-foo(X, Y).",
    [
        {attribute,foo,
                    [{var,{1,6},"X",'X'},
                    {',',{1,7},",",undefined},
                    {var,{1,9},"Y",'Y'}],
                    ["123"]}
    ],
    {
        [],
        [],
        [],
        []
    }
}.

{
"%123
foo(1,[2,3]) -> ok.",
    [
        {function,foo,2,
            [{clause,1,
                        [[],[]],
                        [],[]}],
            ["123"],
            {{1,1},{1,4}}}
    ],
    {
        [
            {[{function,foo,2}],{{1,1},{1,4}}}
        ],
        [],
        [{[{function,foo,2}], [{comments,["123"]}]}],
        []
    }
}.

{
"%123
foo(X) when X==0 -> X.",
    [
        {function,foo,1,
                [{clause,1,
                    [[{var,{1,5},"X",'X'}]],
                    [{var,{1,13},"X",'X'}],
                    [{var,{1,21},"X",'X'}]}],
                ["123"],
                {{1,1},{1,4}}}
    ],
    {
        [
            %{[{function,foo,1},{clause,1},{var,'X'}],{{1,5},{1,6}}},
            {[{function,foo,1}],{{1,1},{1,4}}}
        ],
        [
            %{[{function,foo,1},{clause,1},{var,'X'}],{{1,13},{1,14}}},
            %{[{function,foo,1},{clause,1},{var,'X'}],{{1,20},{1,21}}}
        ],
        [{[{function,foo,1}], [{comments,["123"]}]}],
        []
    }
}.

{
"%%hello
foo() -> ok.",
    [
        {function,foo,0,
            [{clause,1,[],[],[]}],
            ["hello"],
            {{1,1},{1,4}}}
    ],
    {
        [
            {[{function,foo,0}],{{1,1},{1,4}}}
        ],
        [],
        [
            {[{function,foo,0}],[{comments,["hello"]}]}
        ],
        []
    }
}.

{
"%123
foo(A,[2,3]) -> ok1;
foo(A,b) -> ok2.",
    [
        {function,foo,2,
            [{clause,1,
                        [[{var,{1,5},"A",'A'}],[]],
                        [],[]},
                {clause,2,
                        [[{var,{2,5},"A",'A'}],
                        []],
                        [],[]}],
            ["123"],
            {{1,1},{1,4}}}
    ],
    {
        [
            {[{function,foo,2}],{{1,1},{1,4}}}
            %{[{function,foo,2},{clause,2},{var,'A'}],{{1,5},{1,6}}},
            %{[{function,foo,2},{clause,2},{var,'A'}],{{1,23},{1,24}}}
        ],
        [],
        [
            {[{function,foo,2}],[{comments,["123"]}]}
        ],
        []
    }
}.

{
"%hello
-module(mx).
%baz
foo() -> ok.",
    [
        {module,mx,["hello"],{{1,9},{1,11}}},
        {function,foo,0,
                [{clause,1,[],[],[]}],
                ["baz"],
                {{3,1},{3,4}}}
    ],
    {
        [
            {[{module,mx}],{{1,9},{1,11}}},
            {[{module,mx},{function,foo,0}],{{3,1},{3,4}}}
        ],
        [],
        [
            {[{module,mx}],[{comments,["hello"]}]},
            {[{module,mx},{function,foo,0}],[{comments,["baz"]}]}
        ],
        [{module,x}]
    }
}.

{
"-define(A, true).
-define(A(), false).
-define(A, false).
foo() -> ?A, ?A(), ?A(?X,X).
",
    [
        {define,'A',-1,none,[],[],{{0,9},{0,10}}},
        {define,'A',0,[],[],[],{{1,9},{1,10}}},
        {define,'A',-1,none,[],[],{{2,9},{2,10}}},
        {function,foo,0,
            [{clause,1,[],[],
                [
                    {macro,{3,10},"?A",none},
                    {macro,{3,14},"?A",[]},
                    {macro,
                        {3,20},
                        "?A",
                        [[{macro,{3,23},"?X",none}],
                            [{var,{3,26},"X",'X'}]]}]}],
            [],
            {{3,1},{3,4}}}
    ],
    {
        [
            {[{function, foo,0}], {{3,1},{3,4}}},
            {[{macro,'A',-1}],{{0,9},{0,10}}},
            {[{macro,'A',0}],{{1,9},{1,10}}},
            {[{macro,'A',-1}],{{2,9},{2,10}}}
        ],
        [
            %{[{macro,'A',0}],{{3,9},{3,10}}},
            %{[{macro,'A',-1}],{{3,9},{3,10}}}
        ],
        [],
        []
    }
}.

{
"bar([a,X]) ->
fun m:f/3,
b(?z,3),
d:g(?Z),
?MODULE:g(),
#rr.ff,
#fg{gf=g(Y)},
fun(A)->X;(B)->Y end,
Qok;
bar(_+1)-> ok.

quux()->ok.
-type foo(X) :: bar().
",
    [
        {function,bar,1,
            [{clause,1,
                [[{var,{0,8},"X",'X'}]],
                [],
                [
                    {funref,
                        {atom,{1,5},"m",m},
                        {atom,{1,7},"f",f},
                        {integer,{1,9},"3",3}},
                    {call,{atom,{2,1},"b",b},[[{macro,{2,3},"?z",none}],[]]},
                    {call,
                        {atom,{3,1},"d",d},
                        {atom,{3,3},"g",g},
                        [[{macro,{3,5},"?Z",none}]]},
                    {call,
                        {macro,{4,1},"?MODULE",'?MODULE'},
                        {atom,{4,9},"g",g},
                        []},
                    {recfield,{atom,{5,2},"rr",rr},{atom,{5,5},"ff",ff}},
                    {record,
                        {atom,{6,2},"fg",fg},
                        [{{atom,{6,5},"gf",gf},
                            [{call,
                            {atom,{6,8},"g",g},
                            [[{var,{6,10},"Y",'Y'}]]}]}]},
                    {defun,
                        {function,'',1,
                            [{clause,1,
                            [[{var,{7,5},"A",'A'}]],
                            [],
                            [{var,{7,9},"X",'X'}]},
                            {clause,2,
                            [[{var,{7,12},"B",'B'}]],
                            [],
                            [{var,{7,16},"Y",'Y'}]}],
                        [],
                        {{7,4},{7,5}}}},
                    {var,{8,1},"Qok",'Qok'}]},
            {clause,2,[[]],[],[]}],
            [],
            {{0,1},{0,4}}},
        {function,quux,0,[{clause,1,[],[],[]}],[],{{11,1},{11,5}}},
        {type,foo,1,
            [[{var,{12,11},"X",'X'}]],
            [{call,{atom,{12,17},"bar",bar},[]}],
            [],
            {{12,7},{12,10}},
            {12,22}}
    ],
    {
        [],
        [],
        [],
        []
    }
}.

{
"-type f1() :: fun().
-type f2() :: fun((...)->X).
-type f3(fun()) :: fun(() -> X).
-type f4() :: fun((Y)->X).
",
    [
        {type,f1,0,[],
            [{defun,
                {function,'',0,
                    [{clause,1,[],[],[]}],
                    [],
                    {{0,18},{0,19}},
                    none}}],
            [],
            {{0,7},{0,9}},
            {{0,1},{0,20}}},
        {type,f2,0,[],
            [{defun,
                {function,'',1,
                    [{clause,1,[[{var,{1,26},"X",'X'}]],[],[]}],
                    [],
                    {{1,18},{1,19}},
                    none}}],
            [],
            {{1,7},{1,9}},
            {{1,1},{1,28}}},
        {type,f3,1,
            [[{defun,
                {function,'',0,
                    [{clause,1,[],[],[]}],
                    [],
                    {{2,13},{2,14}},
                    none}}]],
            [{defun,
                {function,'',1,
                    [{clause,1,[[{var,{2,30},"X",'X'}]],[],[]}],
                    [],
                    {{2,23},{2,24}},
                    none}}],
            [],
            {{2,7},{2,9}},
            {{2,1},{2,32}}},
        {type,f4,0,[],
            [{defun,
                {function,'',1,
                    [{clause,1,
                        [[{var,{3,20},"Y",'Y'},
                            {var,{3,24},"X",'X'}]],
                        [],[]}],
                    [],
                    {{3,18},{3,19}},
                    none}}],
            [],
            {{3,7},{3,9}},
            {{3,1},{3,26}}}
    ],
    {
        [],
        [],
        []
    }
}.